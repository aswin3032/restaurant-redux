{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchrestaurant = createAsyncThunk('restaurantList/fetchrestaurant', () => {\n  const result = axios.get('/restaurant.json').then(respone => respone.data.restaurants);\n  console.log(result);\n  return result;\n});\nconst restaurantslice = createSlice({\n  name: 'restaurantList',\n  initialState: {\n    loading: false,\n    //pending\n    allrestaurant: [],\n    //resolve\n    error: \"\" //reject\n  },\n\n  extraReducers: builder => {\n    //builder holds the value/response from thunk\n    builder.addCase(fetchrestaurant.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(fetchrestaurant.fulfilled, (state, action) => {\n      state.loading = false;\n      state.allrestaurant = action.payload;\n      state.error = \"\";\n    });\n    builder.addCase(fetchrestaurant.rejected, (state, action) => {\n      state.loading = false;\n      state.allrestaurant = \"\";\n      state.error = action.error.message;\n    });\n  },\n  reducers: {}\n});\nexport default restaurantslice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","fetchrestaurant","result","get","then","respone","data","restaurants","console","log","restaurantslice","name","initialState","loading","allrestaurant","error","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducers","reducer"],"sources":["C:/Users/user/OneDrive/Documents/MEARN/redux/resturant/src/redux/restaurantSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nexport const fetchrestaurant = createAsyncThunk('restaurantList/fetchrestaurant',()=>{\r\n  const result=  axios.get('/restaurant.json').then(respone=>respone.data.restaurants)\r\n  console.log(result);\r\n  return result\r\n\r\n    })\r\n\r\n\r\n\r\nconst restaurantslice = createSlice({\r\n    name :'restaurantList',\r\n    initialState:{\r\n        loading:false,//pending\r\n        allrestaurant:[], //resolve\r\n        error:\"\" //reject\r\n    },\r\n\r\n    extraReducers:(builder)=>{\r\n        //builder holds the value/response from thunk\r\n        builder.addCase(fetchrestaurant.pending,(state)=>{\r\n            state.loading=true\r\n        })\r\n        builder.addCase(fetchrestaurant.fulfilled,(state, action )=>{\r\n            state.loading = false\r\n            state.allrestaurant = action.payload\r\n            state.error =\"\"\r\n        })\r\n        builder.addCase(fetchrestaurant.rejected,(state ,action)=>{\r\n            state.loading = false\r\n            state.allrestaurant=\"\"\r\n            state.error=action.error.message\r\n        })\r\n    },\r\n    reducers :{\r\n        \r\n    }\r\n\r\n\r\n})\r\n\r\nexport default restaurantslice.reducer"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAIzB,OAAO,MAAMC,eAAe,GAAGH,gBAAgB,CAAC,gCAAgC,EAAC,MAAI;EACnF,MAAMI,MAAM,GAAGF,KAAK,CAACG,GAAG,CAAC,kBAAkB,CAAC,CAACC,IAAI,CAACC,OAAO,IAAEA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC;EACpFC,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC;EACnB,OAAOA,MAAM;AAEX,CAAC,CAAC;AAIN,MAAMQ,eAAe,GAAGX,WAAW,CAAC;EAChCY,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAC;IACTC,OAAO,EAAC,KAAK;IAAC;IACdC,aAAa,EAAC,EAAE;IAAE;IAClBC,KAAK,EAAC,EAAE,CAAC;EACb,CAAC;;EAEDC,aAAa,EAAEC,OAAO,IAAG;IACrB;IACAA,OAAO,CAACC,OAAO,CAACjB,eAAe,CAACkB,OAAO,EAAEC,KAAK,IAAG;MAC7CA,KAAK,CAACP,OAAO,GAAC,IAAI;IACtB,CAAC,CAAC;IACFI,OAAO,CAACC,OAAO,CAACjB,eAAe,CAACoB,SAAS,EAAC,CAACD,KAAK,EAAEE,MAAM,KAAI;MACxDF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,aAAa,GAAGQ,MAAM,CAACC,OAAO;MACpCH,KAAK,CAACL,KAAK,GAAE,EAAE;IACnB,CAAC,CAAC;IACFE,OAAO,CAACC,OAAO,CAACjB,eAAe,CAACuB,QAAQ,EAAC,CAACJ,KAAK,EAAEE,MAAM,KAAG;MACtDF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,aAAa,GAAC,EAAE;MACtBM,KAAK,CAACL,KAAK,GAACO,MAAM,CAACP,KAAK,CAACU,OAAO;IACpC,CAAC,CAAC;EACN,CAAC;EACDC,QAAQ,EAAE,CAEV;AAGJ,CAAC,CAAC;AAEF,eAAehB,eAAe,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}